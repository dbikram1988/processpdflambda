'use strict';function cov_1ifrg41uvu(){var path="C:\\JavaSafariTranining\\clm-poc\\doc-management-lambda\\processPDF\\app.js";var hash="5db3f35398fe94c3959a636b87857c0f07764284";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\JavaSafariTranining\\clm-poc\\doc-management-lambda\\processPDF\\app.js",statementMap:{"0":{start:{line:3,column:12},end:{line:3,column:30}},"1":{start:{line:4,column:0},end:{line:4,column:42}},"2":{start:{line:6,column:11},end:{line:6,column:23}},"3":{start:{line:7,column:12},end:{line:7,column:32}},"4":{start:{line:14,column:0},end:{line:28,column:1}},"5":{start:{line:16,column:2},end:{line:16,column:45}},"6":{start:{line:19,column:2},end:{line:27,column:3}},"7":{start:{line:21,column:5},end:{line:25,column:6}},"8":{start:{line:22,column:7},end:{line:22,column:35}},"9":{start:{line:24,column:7},end:{line:24,column:45}},"10":{start:{line:31,column:24},end:{line:76,column:1}},"11":{start:{line:34,column:17},end:{line:34,column:37}},"12":{start:{line:35,column:14},end:{line:35,column:73}},"13":{start:{line:37,column:2},end:{line:37,column:47}},"14":{start:{line:40,column:17},end:{line:43,column:14}},"15":{start:{line:46,column:19},end:{line:46,column:65}},"16":{start:{line:47,column:2},end:{line:47,column:24}},"17":{start:{line:48,column:19},end:{line:48,column:36}},"18":{start:{line:51,column:2},end:{line:52,column:17}},"19":{start:{line:52,column:4},end:{line:52,column:17}},"20":{start:{line:55,column:4},end:{line:55,column:29}},"21":{start:{line:59,column:2},end:{line:75,column:3}},"22":{start:{line:61,column:17},end:{line:61,column:39}},"23":{start:{line:62,column:4},end:{line:62,column:54}},"24":{start:{line:65,column:4},end:{line:71,column:17}},"25":{start:{line:74,column:4},end:{line:74,column:42}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:18},end:{line:14,column:19}},loc:{start:{line:14,column:35},end:{line:28,column:1}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:20,column:21},end:{line:20,column:22}},loc:{start:{line:20,column:38},end:{line:26,column:4}},line:20},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:24},end:{line:31,column:25}},loc:{start:{line:31,column:41},end:{line:76,column:1}},line:31}},branchMap:{"0":{loc:{start:{line:51,column:2},end:{line:52,column:17}},type:"if",locations:[{start:{line:51,column:2},end:{line:52,column:17}},{start:{line:51,column:2},end:{line:52,column:17}}],line:51},"1":{loc:{start:{line:51,column:5},end:{line:51,column:46}},type:"binary-expr",locations:[{start:{line:51,column:5},end:{line:51,column:21}},{start:{line:51,column:25},end:{line:51,column:46}}],line:51}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5db3f35398fe94c3959a636b87857c0f07764284"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ifrg41uvu=function(){return actualCoverage;};}return actualCoverage;}cov_1ifrg41uvu();const AWS=(cov_1ifrg41uvu().s[0]++,require('aws-sdk'));cov_1ifrg41uvu().s[1]++;AWS.config.region=process.env.AWS_REGION;const s3=(cov_1ifrg41uvu().s[2]++,new AWS.S3());const pdf=(cov_1ifrg41uvu().s[3]++,require('pdf-parse'));// Invoked when a PDF is put into the source
// bucket. Extracts text content and saves into
// staging bucket (OutputBucket).
// The standard Lambda handler
cov_1ifrg41uvu().s[4]++;exports.handler=async event=>{cov_1ifrg41uvu().f[0]++;cov_1ifrg41uvu().s[5]++;console.log(JSON.stringify(event,null,2));// Handle each incoming S3 object in the event
cov_1ifrg41uvu().s[6]++;await Promise.all(event.Records.map(async event=>{cov_1ifrg41uvu().f[1]++;cov_1ifrg41uvu().s[7]++;try{cov_1ifrg41uvu().s[8]++;await processDocument(event);}catch(err){cov_1ifrg41uvu().s[9]++;console.error(`Handler error: ${err}`);}}));};// The standard Lambda handler
cov_1ifrg41uvu().s[10]++;const processDocument=async event=>{cov_1ifrg41uvu().f[2]++;// Get object info
const Bucket=(cov_1ifrg41uvu().s[11]++,event.s3.bucket.name);const Key=(cov_1ifrg41uvu().s[12]++,decodeURIComponent(event.s3.object.key.replace(/\+/g,' ')));cov_1ifrg41uvu().s[13]++;console.log(`Bucket: ${Bucket}, Key: ${Key}`);// Get content from source S3 object
const result=(cov_1ifrg41uvu().s[14]++,await s3.getObject({Bucket,Key}).promise());// Get meta data from S3 object
const metaData=(cov_1ifrg41uvu().s[15]++,await s3.headObject({Bucket,Key}).promise());cov_1ifrg41uvu().s[16]++;console.log(metaData);const Metadata=(cov_1ifrg41uvu().s[17]++,metaData.Metadata);// If any meta data present in the uploaded s3 object then pass it to next process
cov_1ifrg41uvu().s[18]++;if((cov_1ifrg41uvu().b[1][0]++,Metadata==null)||(cov_1ifrg41uvu().b[1][1]++,Metadata==undefined)){cov_1ifrg41uvu().b[0][0]++;cov_1ifrg41uvu().s[19]++;Metadata={};}else{cov_1ifrg41uvu().b[0][1]++;}// Adding an additional metadata for object url
cov_1ifrg41uvu().s[20]++;Metadata['doc_key']=Key;cov_1ifrg41uvu().s[21]++;try{// Extract text from PDF
const data=(cov_1ifrg41uvu().s[22]++,await pdf(result.Body));cov_1ifrg41uvu().s[23]++;console.log('PDF text length: ',data.text.length);// Write result to staging S3 bucket
cov_1ifrg41uvu().s[24]++;console.log(await s3.putObject({Bucket:process.env.OutputBucket,Key:`pdf/${Key}.txt`,Body:data.text,ContentType:'application/text',Metadata:Metadata}).promise());}catch(err){cov_1ifrg41uvu().s[25]++;console.error(`Handler error: ${err}`);}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJBV1MiLCJyZXF1aXJlIiwiY29uZmlnIiwicmVnaW9uIiwicHJvY2VzcyIsImVudiIsIkFXU19SRUdJT04iLCJzMyIsIlMzIiwicGRmIiwiZXhwb3J0cyIsImhhbmRsZXIiLCJldmVudCIsImNvbnNvbGUiLCJsb2ciLCJKU09OIiwic3RyaW5naWZ5IiwiUHJvbWlzZSIsImFsbCIsIlJlY29yZHMiLCJtYXAiLCJwcm9jZXNzRG9jdW1lbnQiLCJlcnIiLCJlcnJvciIsIkJ1Y2tldCIsImJ1Y2tldCIsIm5hbWUiLCJLZXkiLCJkZWNvZGVVUklDb21wb25lbnQiLCJvYmplY3QiLCJrZXkiLCJyZXBsYWNlIiwicmVzdWx0IiwiZ2V0T2JqZWN0IiwicHJvbWlzZSIsIm1ldGFEYXRhIiwiaGVhZE9iamVjdCIsIk1ldGFkYXRhIiwidW5kZWZpbmVkIiwiZGF0YSIsIkJvZHkiLCJ0ZXh0IiwibGVuZ3RoIiwicHV0T2JqZWN0IiwiT3V0cHV0QnVja2V0IiwiQ29udGVudFR5cGUiXSwibWFwcGluZ3MiOiJBQUFBLGEsMGpHQWVZOzJGQWJaLEtBQU1BLENBQUFBLEdBQUcsMEJBQUdDLE9BQU8sQ0FBQyxTQUFELENBQVYsQ0FBVCxDLHdCQUNBRCxHQUFHLENBQUNFLE1BQUosQ0FBV0MsTUFBWCxDQUFvQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQWhDLENBRUEsS0FBTUMsQ0FBQUEsRUFBRSwwQkFBRyxHQUFJUCxDQUFBQSxHQUFHLENBQUNRLEVBQVIsRUFBSCxDQUFSLENBQ0EsS0FBTUMsQ0FBQUEsR0FBRywwQkFBR1IsT0FBTyxDQUFDLFdBQUQsQ0FBVixDQUFULENBRUE7QUFDQTtBQUNBO0FBRUE7d0JBQ0FTLE9BQU8sQ0FBQ0MsT0FBUixDQUFrQixLQUFPQyxDQUFBQSxLQUFQLEVBQWlCLGlEQUVqQ0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQUksQ0FBQ0MsU0FBTCxDQUFlSixLQUFmLENBQXNCLElBQXRCLENBQTRCLENBQTVCLENBQVosRUFFQTtBQUppQyx3QkFLakMsS0FBTUssQ0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQ0xOLEtBQUssQ0FBQ08sT0FBTixDQUFjQyxHQUFkLENBQWtCLEtBQU9SLENBQUFBLEtBQVAsRUFBaUIsaURBQ2pDLEdBQUkseUJBQ0YsS0FBTVMsQ0FBQUEsZUFBZSxDQUFDVCxLQUFELENBQXJCLENBQ0QsQ0FBQyxNQUFPVSxHQUFQLENBQVkseUJBQ1pULE9BQU8sQ0FBQ1UsS0FBUixDQUFlLGtCQUFpQkQsR0FBSSxFQUFwQyxFQUNELENBQ0YsQ0FORCxDQURLLENBQU4sQ0FTRCxDQWRELENBZ0JBO3lCQUNBLEtBQU1ELENBQUFBLGVBQWUsQ0FBRyxLQUFPVCxDQUFBQSxLQUFQLEVBQWlCLHlCQUV2QztBQUNBLEtBQU1ZLENBQUFBLE1BQU0sMkJBQUdaLEtBQUssQ0FBQ0wsRUFBTixDQUFTa0IsTUFBVCxDQUFnQkMsSUFBbkIsQ0FBWixDQUNBLEtBQU1DLENBQUFBLEdBQUcsMkJBQUdDLGtCQUFrQixDQUFDaEIsS0FBSyxDQUFDTCxFQUFOLENBQVNzQixNQUFULENBQWdCQyxHQUFoQixDQUFvQkMsT0FBcEIsQ0FBNEIsS0FBNUIsQ0FBbUMsR0FBbkMsQ0FBRCxDQUFyQixDQUFULENBSnVDLHlCQU12Q2xCLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLFdBQVVVLE1BQU8sVUFBU0csR0FBSSxFQUEzQyxFQUVBO0FBQ0EsS0FBTUssQ0FBQUEsTUFBTSwyQkFBRyxLQUFNekIsQ0FBQUEsRUFBRSxDQUFDMEIsU0FBSCxDQUFhLENBQ2hDVCxNQURnQyxDQUVoQ0csR0FGZ0MsQ0FBYixFQUdsQk8sT0FIa0IsRUFBVCxDQUFaLENBS0E7QUFDQSxLQUFNQyxDQUFBQSxRQUFRLDJCQUFHLEtBQU01QixDQUFBQSxFQUFFLENBQUM2QixVQUFILENBQWMsQ0FBRVosTUFBRixDQUFVRyxHQUFWLENBQWQsRUFBK0JPLE9BQS9CLEVBQVQsQ0FBZCxDQWZ1Qyx5QkFnQnZDckIsT0FBTyxDQUFDQyxHQUFSLENBQVlxQixRQUFaLEVBQ0EsS0FBTUUsQ0FBQUEsUUFBUSwyQkFBR0YsUUFBUSxDQUFDRSxRQUFaLENBQWQsQ0FFQTtBQW5CdUMseUJBb0J2QyxHQUFHLDRCQUFBQSxRQUFRLEVBQUksSUFBWiwrQkFBb0JBLFFBQVEsRUFBSUMsU0FBaEMsQ0FBSCxDQUNFLHFEQUFBRCxRQUFRLENBQUcsRUFBWCxDQUFhLENBRGYsaUNBR0U7QUF2QnFDLHlCQXdCckNBLFFBQVEsQ0FBQyxTQUFELENBQVIsQ0FBc0JWLEdBQXRCLENBeEJxQyx5QkE0QnZDLEdBQUksQ0FDRjtBQUNBLEtBQU1ZLENBQUFBLElBQUksMkJBQUcsS0FBTTlCLENBQUFBLEdBQUcsQ0FBQ3VCLE1BQU0sQ0FBQ1EsSUFBUixDQUFaLENBQVYsQ0FGRSx5QkFHRjNCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaLENBQWlDeUIsSUFBSSxDQUFDRSxJQUFMLENBQVVDLE1BQTNDLEVBRUE7QUFMRSx5QkFNRjdCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLEtBQU1QLENBQUFBLEVBQUUsQ0FBQ29DLFNBQUgsQ0FBYSxDQUM3Qm5CLE1BQU0sQ0FBRXBCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZdUMsWUFEUyxDQUU3QmpCLEdBQUcsQ0FBRyxPQUFNQSxHQUFJLE1BRmEsQ0FHN0JhLElBQUksQ0FBRUQsSUFBSSxDQUFDRSxJQUhrQixDQUk3QkksV0FBVyxDQUFFLGtCQUpnQixDQUs3QlIsUUFBUSxDQUFFQSxRQUxtQixDQUFiLEVBTWZILE9BTmUsRUFBbEIsRUFRRCxDQUFDLE1BQU9aLEdBQVAsQ0FBWSwwQkFDWlQsT0FBTyxDQUFDVSxLQUFSLENBQWUsa0JBQWlCRCxHQUFJLEVBQXBDLEVBQ0QsQ0FDRixDQTdDRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xyXG5cclxuY29uc3QgQVdTID0gcmVxdWlyZSgnYXdzLXNkaycpXHJcbkFXUy5jb25maWcucmVnaW9uID0gcHJvY2Vzcy5lbnYuQVdTX1JFR0lPTiBcclxuXHJcbmNvbnN0IHMzID0gbmV3IEFXUy5TMygpXHJcbmNvbnN0IHBkZiA9IHJlcXVpcmUoJ3BkZi1wYXJzZScpXHJcblxyXG4vLyBJbnZva2VkIHdoZW4gYSBQREYgaXMgcHV0IGludG8gdGhlIHNvdXJjZVxyXG4vLyBidWNrZXQuIEV4dHJhY3RzIHRleHQgY29udGVudCBhbmQgc2F2ZXMgaW50b1xyXG4vLyBzdGFnaW5nIGJ1Y2tldCAoT3V0cHV0QnVja2V0KS5cclxuXHJcbi8vIFRoZSBzdGFuZGFyZCBMYW1iZGEgaGFuZGxlclxyXG5leHBvcnRzLmhhbmRsZXIgPSBhc3luYyAoZXZlbnQpID0+IHtcclxuXHJcbiAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZXZlbnQsIG51bGwsIDIpKVxyXG5cclxuICAvLyBIYW5kbGUgZWFjaCBpbmNvbWluZyBTMyBvYmplY3QgaW4gdGhlIGV2ZW50XHJcbiAgYXdhaXQgUHJvbWlzZS5hbGwoXHJcbiAgIGV2ZW50LlJlY29yZHMubWFwKGFzeW5jIChldmVudCkgPT4ge1xyXG4gICAgIHRyeSB7XHJcbiAgICAgICBhd2FpdCBwcm9jZXNzRG9jdW1lbnQoZXZlbnQpXHJcbiAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICBjb25zb2xlLmVycm9yKGBIYW5kbGVyIGVycm9yOiAke2Vycn1gKVxyXG4gICAgIH1cclxuICAgfSlcclxuICApXHJcbn1cclxuXHJcbi8vIFRoZSBzdGFuZGFyZCBMYW1iZGEgaGFuZGxlclxyXG5jb25zdCBwcm9jZXNzRG9jdW1lbnQgPSBhc3luYyAoZXZlbnQpID0+IHtcclxuXHJcbiAgLy8gR2V0IG9iamVjdCBpbmZvXHJcbiAgY29uc3QgQnVja2V0ID0gZXZlbnQuczMuYnVja2V0Lm5hbWVcclxuICBjb25zdCBLZXkgPSBkZWNvZGVVUklDb21wb25lbnQoZXZlbnQuczMub2JqZWN0LmtleS5yZXBsYWNlKC9cXCsvZywgJyAnKSlcclxuICBcclxuICBjb25zb2xlLmxvZyhgQnVja2V0OiAke0J1Y2tldH0sIEtleTogJHtLZXl9YClcclxuXHJcbiAgLy8gR2V0IGNvbnRlbnQgZnJvbSBzb3VyY2UgUzMgb2JqZWN0XHJcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgczMuZ2V0T2JqZWN0KHtcclxuICAgIEJ1Y2tldCxcclxuICAgIEtleVxyXG4gIH0pLnByb21pc2UoKVxyXG5cclxuICAvLyBHZXQgbWV0YSBkYXRhIGZyb20gUzMgb2JqZWN0XHJcbiAgY29uc3QgbWV0YURhdGEgPSBhd2FpdCBzMy5oZWFkT2JqZWN0KHsgQnVja2V0LCBLZXkgfSkucHJvbWlzZSgpO1xyXG4gIGNvbnNvbGUubG9nKG1ldGFEYXRhKTtcclxuICBjb25zdCBNZXRhZGF0YSA9IG1ldGFEYXRhLk1ldGFkYXRhXHJcblxyXG4gIC8vIElmIGFueSBtZXRhIGRhdGEgcHJlc2VudCBpbiB0aGUgdXBsb2FkZWQgczMgb2JqZWN0IHRoZW4gcGFzcyBpdCB0byBuZXh0IHByb2Nlc3NcclxuICBpZihNZXRhZGF0YSA9PSBudWxsIHx8IE1ldGFkYXRhID09IHVuZGVmaW5lZClcclxuICAgIE1ldGFkYXRhID0ge31cclxuXHJcbiAgICAvLyBBZGRpbmcgYW4gYWRkaXRpb25hbCBtZXRhZGF0YSBmb3Igb2JqZWN0IHVybFxyXG4gICAgTWV0YWRhdGFbJ2RvY19rZXknXSA9IEtleVxyXG5cclxuXHJcblxyXG4gIHRyeSB7XHJcbiAgICAvLyBFeHRyYWN0IHRleHQgZnJvbSBQREZcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBwZGYocmVzdWx0LkJvZHkpXHJcbiAgICBjb25zb2xlLmxvZygnUERGIHRleHQgbGVuZ3RoOiAnLCBkYXRhLnRleHQubGVuZ3RoKVxyXG5cclxuICAgIC8vIFdyaXRlIHJlc3VsdCB0byBzdGFnaW5nIFMzIGJ1Y2tldFxyXG4gICAgY29uc29sZS5sb2coYXdhaXQgczMucHV0T2JqZWN0KHtcclxuICAgICAgQnVja2V0OiBwcm9jZXNzLmVudi5PdXRwdXRCdWNrZXQsXHJcbiAgICAgIEtleTogYHBkZi8ke0tleX0udHh0YCxcclxuICAgICAgQm9keTogZGF0YS50ZXh0LFxyXG4gICAgICBDb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL3RleHQnLFxyXG4gICAgICBNZXRhZGF0YTogTWV0YWRhdGFcclxuICAgIH0pLnByb21pc2UoKSlcclxuXHJcbiAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKGBIYW5kbGVyIGVycm9yOiAke2Vycn1gKVxyXG4gIH1cclxufVxyXG4iXX0=