'use strict';function cov_1ifrg41uvu(){var path="C:\\JavaSafariTranining\\clm-poc\\doc-management-lambda\\processPDF\\app.js";var hash="c441b3ba0c654244c16491723283ecfcc0ba056b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\JavaSafariTranining\\clm-poc\\doc-management-lambda\\processPDF\\app.js",statementMap:{"0":{start:{line:3,column:12},end:{line:3,column:30}},"1":{start:{line:4,column:0},end:{line:4,column:42}},"2":{start:{line:6,column:11},end:{line:6,column:23}},"3":{start:{line:7,column:12},end:{line:7,column:32}},"4":{start:{line:14,column:0},end:{line:28,column:1}},"5":{start:{line:16,column:2},end:{line:16,column:45}},"6":{start:{line:19,column:2},end:{line:27,column:3}},"7":{start:{line:21,column:5},end:{line:25,column:6}},"8":{start:{line:22,column:7},end:{line:22,column:35}},"9":{start:{line:24,column:7},end:{line:24,column:45}},"10":{start:{line:31,column:24},end:{line:75,column:1}},"11":{start:{line:34,column:17},end:{line:34,column:37}},"12":{start:{line:35,column:14},end:{line:35,column:73}},"13":{start:{line:37,column:2},end:{line:37,column:47}},"14":{start:{line:40,column:17},end:{line:43,column:14}},"15":{start:{line:46,column:19},end:{line:46,column:65}},"16":{start:{line:47,column:19},end:{line:47,column:36}},"17":{start:{line:50,column:2},end:{line:51,column:17}},"18":{start:{line:51,column:4},end:{line:51,column:17}},"19":{start:{line:54,column:4},end:{line:54,column:29}},"20":{start:{line:58,column:2},end:{line:74,column:3}},"21":{start:{line:60,column:17},end:{line:60,column:39}},"22":{start:{line:61,column:4},end:{line:61,column:54}},"23":{start:{line:64,column:4},end:{line:70,column:17}},"24":{start:{line:73,column:4},end:{line:73,column:42}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:18},end:{line:14,column:19}},loc:{start:{line:14,column:35},end:{line:28,column:1}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:20,column:21},end:{line:20,column:22}},loc:{start:{line:20,column:38},end:{line:26,column:4}},line:20},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:24},end:{line:31,column:25}},loc:{start:{line:31,column:41},end:{line:75,column:1}},line:31}},branchMap:{"0":{loc:{start:{line:50,column:2},end:{line:51,column:17}},type:"if",locations:[{start:{line:50,column:2},end:{line:51,column:17}},{start:{line:50,column:2},end:{line:51,column:17}}],line:50},"1":{loc:{start:{line:50,column:5},end:{line:50,column:46}},type:"binary-expr",locations:[{start:{line:50,column:5},end:{line:50,column:21}},{start:{line:50,column:25},end:{line:50,column:46}}],line:50}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c441b3ba0c654244c16491723283ecfcc0ba056b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ifrg41uvu=function(){return actualCoverage;};}return actualCoverage;}cov_1ifrg41uvu();const AWS=(cov_1ifrg41uvu().s[0]++,require('aws-sdk'));cov_1ifrg41uvu().s[1]++;AWS.config.region=process.env.AWS_REGION;const s3=(cov_1ifrg41uvu().s[2]++,new AWS.S3());const pdf=(cov_1ifrg41uvu().s[3]++,require('pdf-parse'));// Invoked when a PDF is put into the source
// bucket. Extracts text content and saves into
// staging bucket (OutputBucket).
// The standard Lambda handler
cov_1ifrg41uvu().s[4]++;exports.handler=async event=>{cov_1ifrg41uvu().f[0]++;cov_1ifrg41uvu().s[5]++;console.log(JSON.stringify(event,null,2));// Handle each incoming S3 object in the event
cov_1ifrg41uvu().s[6]++;await Promise.all(event.Records.map(async event=>{cov_1ifrg41uvu().f[1]++;cov_1ifrg41uvu().s[7]++;try{cov_1ifrg41uvu().s[8]++;await processDocument(event);}catch(err){cov_1ifrg41uvu().s[9]++;console.error(`Handler error: ${err}`);}}));};// The standard Lambda handler
cov_1ifrg41uvu().s[10]++;const processDocument=async event=>{cov_1ifrg41uvu().f[2]++;// Get object info
const Bucket=(cov_1ifrg41uvu().s[11]++,event.s3.bucket.name);const Key=(cov_1ifrg41uvu().s[12]++,decodeURIComponent(event.s3.object.key.replace(/\+/g,' ')));cov_1ifrg41uvu().s[13]++;console.log(`Bucket: ${Bucket}, Key: ${Key}`);// Get content from source S3 object
const result=(cov_1ifrg41uvu().s[14]++,await s3.getObject({Bucket,Key}).promise());// Get meta data from S3 object
const metaData=(cov_1ifrg41uvu().s[15]++,await s3.headObject({Bucket,Key}).promise());const Metadata=(cov_1ifrg41uvu().s[16]++,metaData.Metadata);// If any meta data present in the uploaded s3 object then pass it to next process
cov_1ifrg41uvu().s[17]++;if((cov_1ifrg41uvu().b[1][0]++,Metadata==null)||(cov_1ifrg41uvu().b[1][1]++,Metadata==undefined)){cov_1ifrg41uvu().b[0][0]++;cov_1ifrg41uvu().s[18]++;Metadata={};}else{cov_1ifrg41uvu().b[0][1]++;}// Adding an additional metadata for object url
cov_1ifrg41uvu().s[19]++;Metadata['doc_key']=Key;cov_1ifrg41uvu().s[20]++;try{// Extract text from PDF
const data=(cov_1ifrg41uvu().s[21]++,await pdf(result.Body));cov_1ifrg41uvu().s[22]++;console.log('PDF text length: ',data.text.length);// Write result to staging S3 bucket
cov_1ifrg41uvu().s[23]++;console.log(await s3.putObject({Bucket:process.env.OutputBucket,Key:`pdf/${Key}.txt`,Body:data.text,ContentType:'application/text',Metadata:Metadata}).promise());}catch(err){cov_1ifrg41uvu().s[24]++;console.error(`Handler error: ${err}`);}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJBV1MiLCJyZXF1aXJlIiwiY29uZmlnIiwicmVnaW9uIiwicHJvY2VzcyIsImVudiIsIkFXU19SRUdJT04iLCJzMyIsIlMzIiwicGRmIiwiZXhwb3J0cyIsImhhbmRsZXIiLCJldmVudCIsImNvbnNvbGUiLCJsb2ciLCJKU09OIiwic3RyaW5naWZ5IiwiUHJvbWlzZSIsImFsbCIsIlJlY29yZHMiLCJtYXAiLCJwcm9jZXNzRG9jdW1lbnQiLCJlcnIiLCJlcnJvciIsIkJ1Y2tldCIsImJ1Y2tldCIsIm5hbWUiLCJLZXkiLCJkZWNvZGVVUklDb21wb25lbnQiLCJvYmplY3QiLCJrZXkiLCJyZXBsYWNlIiwicmVzdWx0IiwiZ2V0T2JqZWN0IiwicHJvbWlzZSIsIm1ldGFEYXRhIiwiaGVhZE9iamVjdCIsIk1ldGFkYXRhIiwidW5kZWZpbmVkIiwiZGF0YSIsIkJvZHkiLCJ0ZXh0IiwibGVuZ3RoIiwicHV0T2JqZWN0IiwiT3V0cHV0QnVja2V0IiwiQ29udGVudFR5cGUiXSwibWFwcGluZ3MiOiJBQUFBLGEsMi9GQWVZOzJGQWJaLEtBQU1BLENBQUFBLEdBQUcsMEJBQUdDLE9BQU8sQ0FBQyxTQUFELENBQVYsQ0FBVCxDLHdCQUNBRCxHQUFHLENBQUNFLE1BQUosQ0FBV0MsTUFBWCxDQUFvQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQWhDLENBRUEsS0FBTUMsQ0FBQUEsRUFBRSwwQkFBRyxHQUFJUCxDQUFBQSxHQUFHLENBQUNRLEVBQVIsRUFBSCxDQUFSLENBQ0EsS0FBTUMsQ0FBQUEsR0FBRywwQkFBR1IsT0FBTyxDQUFDLFdBQUQsQ0FBVixDQUFULENBRUE7QUFDQTtBQUNBO0FBRUE7d0JBQ0FTLE9BQU8sQ0FBQ0MsT0FBUixDQUFrQixLQUFPQyxDQUFBQSxLQUFQLEVBQWlCLGlEQUVqQ0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQUksQ0FBQ0MsU0FBTCxDQUFlSixLQUFmLENBQXNCLElBQXRCLENBQTRCLENBQTVCLENBQVosRUFFQTtBQUppQyx3QkFLakMsS0FBTUssQ0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQ0xOLEtBQUssQ0FBQ08sT0FBTixDQUFjQyxHQUFkLENBQWtCLEtBQU9SLENBQUFBLEtBQVAsRUFBaUIsaURBQ2pDLEdBQUkseUJBQ0YsS0FBTVMsQ0FBQUEsZUFBZSxDQUFDVCxLQUFELENBQXJCLENBQ0QsQ0FBQyxNQUFPVSxHQUFQLENBQVkseUJBQ1pULE9BQU8sQ0FBQ1UsS0FBUixDQUFlLGtCQUFpQkQsR0FBSSxFQUFwQyxFQUNELENBQ0YsQ0FORCxDQURLLENBQU4sQ0FTRCxDQWRELENBZ0JBO3lCQUNBLEtBQU1ELENBQUFBLGVBQWUsQ0FBRyxLQUFPVCxDQUFBQSxLQUFQLEVBQWlCLHlCQUV2QztBQUNBLEtBQU1ZLENBQUFBLE1BQU0sMkJBQUdaLEtBQUssQ0FBQ0wsRUFBTixDQUFTa0IsTUFBVCxDQUFnQkMsSUFBbkIsQ0FBWixDQUNBLEtBQU1DLENBQUFBLEdBQUcsMkJBQUdDLGtCQUFrQixDQUFDaEIsS0FBSyxDQUFDTCxFQUFOLENBQVNzQixNQUFULENBQWdCQyxHQUFoQixDQUFvQkMsT0FBcEIsQ0FBNEIsS0FBNUIsQ0FBbUMsR0FBbkMsQ0FBRCxDQUFyQixDQUFULENBSnVDLHlCQU12Q2xCLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLFdBQVVVLE1BQU8sVUFBU0csR0FBSSxFQUEzQyxFQUVBO0FBQ0EsS0FBTUssQ0FBQUEsTUFBTSwyQkFBRyxLQUFNekIsQ0FBQUEsRUFBRSxDQUFDMEIsU0FBSCxDQUFhLENBQ2hDVCxNQURnQyxDQUVoQ0csR0FGZ0MsQ0FBYixFQUdsQk8sT0FIa0IsRUFBVCxDQUFaLENBS0E7QUFDQSxLQUFNQyxDQUFBQSxRQUFRLDJCQUFHLEtBQU01QixDQUFBQSxFQUFFLENBQUM2QixVQUFILENBQWMsQ0FBRVosTUFBRixDQUFVRyxHQUFWLENBQWQsRUFBK0JPLE9BQS9CLEVBQVQsQ0FBZCxDQUNBLEtBQU1HLENBQUFBLFFBQVEsMkJBQUdGLFFBQVEsQ0FBQ0UsUUFBWixDQUFkLENBRUE7QUFsQnVDLHlCQW1CdkMsR0FBRyw0QkFBQUEsUUFBUSxFQUFJLElBQVosK0JBQW9CQSxRQUFRLEVBQUlDLFNBQWhDLENBQUgsQ0FDRSxxREFBQUQsUUFBUSxDQUFHLEVBQVgsQ0FBYSxDQURmLGlDQUdFO0FBdEJxQyx5QkF1QnJDQSxRQUFRLENBQUMsU0FBRCxDQUFSLENBQXNCVixHQUF0QixDQXZCcUMseUJBMkJ2QyxHQUFJLENBQ0Y7QUFDQSxLQUFNWSxDQUFBQSxJQUFJLDJCQUFHLEtBQU05QixDQUFBQSxHQUFHLENBQUN1QixNQUFNLENBQUNRLElBQVIsQ0FBWixDQUFWLENBRkUseUJBR0YzQixPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBWixDQUFpQ3lCLElBQUksQ0FBQ0UsSUFBTCxDQUFVQyxNQUEzQyxFQUVBO0FBTEUseUJBTUY3QixPQUFPLENBQUNDLEdBQVIsQ0FBWSxLQUFNUCxDQUFBQSxFQUFFLENBQUNvQyxTQUFILENBQWEsQ0FDN0JuQixNQUFNLENBQUVwQixPQUFPLENBQUNDLEdBQVIsQ0FBWXVDLFlBRFMsQ0FFN0JqQixHQUFHLENBQUcsT0FBTUEsR0FBSSxNQUZhLENBRzdCYSxJQUFJLENBQUVELElBQUksQ0FBQ0UsSUFIa0IsQ0FJN0JJLFdBQVcsQ0FBRSxrQkFKZ0IsQ0FLN0JSLFFBQVEsQ0FBRUEsUUFMbUIsQ0FBYixFQU1mSCxPQU5lLEVBQWxCLEVBUUQsQ0FBQyxNQUFPWixHQUFQLENBQVksMEJBQ1pULE9BQU8sQ0FBQ1UsS0FBUixDQUFlLGtCQUFpQkQsR0FBSSxFQUFwQyxFQUNELENBQ0YsQ0E1Q0QiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcclxuXHJcbmNvbnN0IEFXUyA9IHJlcXVpcmUoJ2F3cy1zZGsnKVxyXG5BV1MuY29uZmlnLnJlZ2lvbiA9IHByb2Nlc3MuZW52LkFXU19SRUdJT04gXHJcblxyXG5jb25zdCBzMyA9IG5ldyBBV1MuUzMoKVxyXG5jb25zdCBwZGYgPSByZXF1aXJlKCdwZGYtcGFyc2UnKVxyXG5cclxuLy8gSW52b2tlZCB3aGVuIGEgUERGIGlzIHB1dCBpbnRvIHRoZSBzb3VyY2VcclxuLy8gYnVja2V0LiBFeHRyYWN0cyB0ZXh0IGNvbnRlbnQgYW5kIHNhdmVzIGludG9cclxuLy8gc3RhZ2luZyBidWNrZXQgKE91dHB1dEJ1Y2tldCkuXHJcblxyXG4vLyBUaGUgc3RhbmRhcmQgTGFtYmRhIGhhbmRsZXJcclxuZXhwb3J0cy5oYW5kbGVyID0gYXN5bmMgKGV2ZW50KSA9PiB7XHJcblxyXG4gIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGV2ZW50LCBudWxsLCAyKSlcclxuXHJcbiAgLy8gSGFuZGxlIGVhY2ggaW5jb21pbmcgUzMgb2JqZWN0IGluIHRoZSBldmVudFxyXG4gIGF3YWl0IFByb21pc2UuYWxsKFxyXG4gICBldmVudC5SZWNvcmRzLm1hcChhc3luYyAoZXZlbnQpID0+IHtcclxuICAgICB0cnkge1xyXG4gICAgICAgYXdhaXQgcHJvY2Vzc0RvY3VtZW50KGV2ZW50KVxyXG4gICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgY29uc29sZS5lcnJvcihgSGFuZGxlciBlcnJvcjogJHtlcnJ9YClcclxuICAgICB9XHJcbiAgIH0pXHJcbiAgKVxyXG59XHJcblxyXG4vLyBUaGUgc3RhbmRhcmQgTGFtYmRhIGhhbmRsZXJcclxuY29uc3QgcHJvY2Vzc0RvY3VtZW50ID0gYXN5bmMgKGV2ZW50KSA9PiB7XHJcblxyXG4gIC8vIEdldCBvYmplY3QgaW5mb1xyXG4gIGNvbnN0IEJ1Y2tldCA9IGV2ZW50LnMzLmJ1Y2tldC5uYW1lXHJcbiAgY29uc3QgS2V5ID0gZGVjb2RlVVJJQ29tcG9uZW50KGV2ZW50LnMzLm9iamVjdC5rZXkucmVwbGFjZSgvXFwrL2csICcgJykpXHJcbiAgXHJcbiAgY29uc29sZS5sb2coYEJ1Y2tldDogJHtCdWNrZXR9LCBLZXk6ICR7S2V5fWApXHJcblxyXG4gIC8vIEdldCBjb250ZW50IGZyb20gc291cmNlIFMzIG9iamVjdFxyXG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHMzLmdldE9iamVjdCh7XHJcbiAgICBCdWNrZXQsXHJcbiAgICBLZXlcclxuICB9KS5wcm9taXNlKClcclxuXHJcbiAgLy8gR2V0IG1ldGEgZGF0YSBmcm9tIFMzIG9iamVjdFxyXG4gIGNvbnN0IG1ldGFEYXRhID0gYXdhaXQgczMuaGVhZE9iamVjdCh7IEJ1Y2tldCwgS2V5IH0pLnByb21pc2UoKTtcclxuICBjb25zdCBNZXRhZGF0YSA9IG1ldGFEYXRhLk1ldGFkYXRhXHJcblxyXG4gIC8vIElmIGFueSBtZXRhIGRhdGEgcHJlc2VudCBpbiB0aGUgdXBsb2FkZWQgczMgb2JqZWN0IHRoZW4gcGFzcyBpdCB0byBuZXh0IHByb2Nlc3NcclxuICBpZihNZXRhZGF0YSA9PSBudWxsIHx8IE1ldGFkYXRhID09IHVuZGVmaW5lZClcclxuICAgIE1ldGFkYXRhID0ge31cclxuXHJcbiAgICAvLyBBZGRpbmcgYW4gYWRkaXRpb25hbCBtZXRhZGF0YSBmb3Igb2JqZWN0IHVybFxyXG4gICAgTWV0YWRhdGFbJ2RvY19rZXknXSA9IEtleVxyXG5cclxuXHJcblxyXG4gIHRyeSB7XHJcbiAgICAvLyBFeHRyYWN0IHRleHQgZnJvbSBQREZcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBwZGYocmVzdWx0LkJvZHkpXHJcbiAgICBjb25zb2xlLmxvZygnUERGIHRleHQgbGVuZ3RoOiAnLCBkYXRhLnRleHQubGVuZ3RoKVxyXG5cclxuICAgIC8vIFdyaXRlIHJlc3VsdCB0byBzdGFnaW5nIFMzIGJ1Y2tldFxyXG4gICAgY29uc29sZS5sb2coYXdhaXQgczMucHV0T2JqZWN0KHtcclxuICAgICAgQnVja2V0OiBwcm9jZXNzLmVudi5PdXRwdXRCdWNrZXQsXHJcbiAgICAgIEtleTogYHBkZi8ke0tleX0udHh0YCxcclxuICAgICAgQm9keTogZGF0YS50ZXh0LFxyXG4gICAgICBDb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL3RleHQnLFxyXG4gICAgICBNZXRhZGF0YTogTWV0YWRhdGFcclxuICAgIH0pLnByb21pc2UoKSlcclxuXHJcbiAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKGBIYW5kbGVyIGVycm9yOiAke2Vycn1gKVxyXG4gIH1cclxufVxyXG4iXX0=